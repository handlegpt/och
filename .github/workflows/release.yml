name: Release

on:
  release:
    types: [ published ]

jobs:
  release-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run full test suite
      run: |
        npm run lint
        npm run type-check
        npm run test:unit
        npm run test:integration
    
    - name: Build production application
      run: npm run build
    
    - name: Run security audit
      run: npm audit --audit-level moderate
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to Production
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "
          cd /root/och &&
          git pull origin main &&
          docker compose down &&
          docker compose build --no-cache &&
          docker compose up -d
        "
    
    - name: Production Health Check
      run: |
        sleep 30
        curl -f http://${{ secrets.SERVER_HOST }}/health || exit 1
    
    - name: Notify Deployment Success
      if: success()
      run: |
        echo "✅ Production deployment successful for version ${{ github.event.release.tag_name }}"
    
    - name: Notify Deployment Failure
      if: failure()
      run: |
        echo "❌ Production deployment failed for version ${{ github.event.release.tag_name }}"